// Code generated by protoc-gen-go. DO NOT EDIT.
// source: praefect.proto

package gitalypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RepositoryReplicasRequest struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RepositoryReplicasRequest) Reset()         { *m = RepositoryReplicasRequest{} }
func (m *RepositoryReplicasRequest) String() string { return proto.CompactTextString(m) }
func (*RepositoryReplicasRequest) ProtoMessage()    {}
func (*RepositoryReplicasRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d32bf44842ead735, []int{0}
}

func (m *RepositoryReplicasRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryReplicasRequest.Unmarshal(m, b)
}
func (m *RepositoryReplicasRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryReplicasRequest.Marshal(b, m, deterministic)
}
func (m *RepositoryReplicasRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryReplicasRequest.Merge(m, src)
}
func (m *RepositoryReplicasRequest) XXX_Size() int {
	return xxx_messageInfo_RepositoryReplicasRequest.Size(m)
}
func (m *RepositoryReplicasRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryReplicasRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryReplicasRequest proto.InternalMessageInfo

func (m *RepositoryReplicasRequest) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type RepositoryReplicasResponse struct {
	Primary              *RepositoryReplicasResponse_ReplicaInfo   `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`
	Secondaries          []*RepositoryReplicasResponse_ReplicaInfo `protobuf:"bytes,2,rep,name=secondaries,proto3" json:"secondaries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *RepositoryReplicasResponse) Reset()         { *m = RepositoryReplicasResponse{} }
func (m *RepositoryReplicasResponse) String() string { return proto.CompactTextString(m) }
func (*RepositoryReplicasResponse) ProtoMessage()    {}
func (*RepositoryReplicasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d32bf44842ead735, []int{1}
}

func (m *RepositoryReplicasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryReplicasResponse.Unmarshal(m, b)
}
func (m *RepositoryReplicasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryReplicasResponse.Marshal(b, m, deterministic)
}
func (m *RepositoryReplicasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryReplicasResponse.Merge(m, src)
}
func (m *RepositoryReplicasResponse) XXX_Size() int {
	return xxx_messageInfo_RepositoryReplicasResponse.Size(m)
}
func (m *RepositoryReplicasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryReplicasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryReplicasResponse proto.InternalMessageInfo

func (m *RepositoryReplicasResponse) GetPrimary() *RepositoryReplicasResponse_ReplicaInfo {
	if m != nil {
		return m.Primary
	}
	return nil
}

func (m *RepositoryReplicasResponse) GetSecondaries() []*RepositoryReplicasResponse_ReplicaInfo {
	if m != nil {
		return m.Secondaries
	}
	return nil
}

type RepositoryReplicasResponse_ReplicaInfo struct {
	Storage              string   `protobuf:"bytes,1,opt,name=storage,proto3" json:"storage,omitempty"`
	Checksum             string   `protobuf:"bytes,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepositoryReplicasResponse_ReplicaInfo) Reset() {
	*m = RepositoryReplicasResponse_ReplicaInfo{}
}
func (m *RepositoryReplicasResponse_ReplicaInfo) String() string { return proto.CompactTextString(m) }
func (*RepositoryReplicasResponse_ReplicaInfo) ProtoMessage()    {}
func (*RepositoryReplicasResponse_ReplicaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_d32bf44842ead735, []int{1, 0}
}

func (m *RepositoryReplicasResponse_ReplicaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryReplicasResponse_ReplicaInfo.Unmarshal(m, b)
}
func (m *RepositoryReplicasResponse_ReplicaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryReplicasResponse_ReplicaInfo.Marshal(b, m, deterministic)
}
func (m *RepositoryReplicasResponse_ReplicaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryReplicasResponse_ReplicaInfo.Merge(m, src)
}
func (m *RepositoryReplicasResponse_ReplicaInfo) XXX_Size() int {
	return xxx_messageInfo_RepositoryReplicasResponse_ReplicaInfo.Size(m)
}
func (m *RepositoryReplicasResponse_ReplicaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryReplicasResponse_ReplicaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryReplicasResponse_ReplicaInfo proto.InternalMessageInfo

func (m *RepositoryReplicasResponse_ReplicaInfo) GetStorage() string {
	if m != nil {
		return m.Storage
	}
	return ""
}

func (m *RepositoryReplicasResponse_ReplicaInfo) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

func init() {
	proto.RegisterType((*RepositoryReplicasRequest)(nil), "gitaly.RepositoryReplicasRequest")
	proto.RegisterType((*RepositoryReplicasResponse)(nil), "gitaly.RepositoryReplicasResponse")
	proto.RegisterType((*RepositoryReplicasResponse_ReplicaInfo)(nil), "gitaly.RepositoryReplicasResponse.ReplicaInfo")
}

func init() { proto.RegisterFile("praefect.proto", fileDescriptor_d32bf44842ead735) }

var fileDescriptor_d32bf44842ead735 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x95, 0x80, 0xda, 0x70, 0x41, 0x15, 0xf2, 0x14, 0x32, 0x95, 0x4c, 0x5d, 0x70, 0x50,
	0xf8, 0x07, 0xb0, 0xc0, 0x04, 0x0a, 0x1b, 0x9b, 0xe3, 0x5e, 0x53, 0x8b, 0x24, 0x67, 0x6c, 0x17,
	0xd4, 0x5f, 0xc2, 0x7f, 0x45, 0x42, 0x42, 0x24, 0x69, 0x14, 0x41, 0x05, 0x12, 0x9b, 0xef, 0xbd,
	0x7b, 0x9f, 0x9e, 0x6d, 0x98, 0x69, 0x23, 0x70, 0x85, 0xd2, 0x71, 0x6d, 0xc8, 0x11, 0x9b, 0x94,
	0xca, 0x89, 0x6a, 0x1b, 0x1f, 0xdb, 0xb5, 0x30, 0xb8, 0xec, 0xd4, 0xe4, 0x0e, 0x4e, 0x73, 0xd4,
	0x64, 0x95, 0x23, 0xb3, 0xcd, 0x51, 0x57, 0x4a, 0x0a, 0x9b, 0xe3, 0xf3, 0x06, 0xad, 0x63, 0x19,
	0x80, 0x19, 0xcc, 0xc8, 0x9b, 0x7b, 0x8b, 0x30, 0x63, 0xbc, 0xe3, 0xf0, 0x51, 0x6c, 0xb4, 0x95,
	0x7c, 0x78, 0x10, 0xef, 0x23, 0x5a, 0x4d, 0x8d, 0x45, 0x76, 0x03, 0x53, 0x6d, 0x54, 0x2d, 0x06,
	0x1e, 0xdf, 0xc3, 0xfb, 0x16, 0xe2, 0xbd, 0x70, 0xdb, 0xac, 0x28, 0xdf, 0xc5, 0xd9, 0x3d, 0x84,
	0x16, 0x25, 0x35, 0x4b, 0x61, 0x14, 0xda, 0xc8, 0x9f, 0x1f, 0xfc, 0x83, 0x36, 0x46, 0xc4, 0xd7,
	0x10, 0x8e, 0x3c, 0x16, 0xc1, 0xd4, 0x3a, 0x32, 0xa2, 0xc4, 0xb6, 0xea, 0x51, 0xbe, 0x1b, 0x59,
	0x0c, 0x81, 0x5c, 0xa3, 0x7c, 0xb2, 0x9b, 0x3a, 0xf2, 0x5b, 0x6b, 0x98, 0xb3, 0x57, 0x98, 0xf5,
	0x90, 0x07, 0x34, 0x2f, 0x4a, 0x22, 0x43, 0x60, 0x3f, 0xdb, 0xb0, 0xb3, 0xdf, 0x9a, 0xb6, 0xcf,
	0x1f, 0x27, 0x7f, 0x5f, 0x26, 0x09, 0xde, 0xdf, 0x16, 0x87, 0x81, 0x7f, 0xe2, 0x5d, 0x5d, 0x3c,
	0x7e, 0xad, 0x57, 0xa2, 0xe0, 0x92, 0xea, 0xb4, 0x3b, 0x9e, 0x93, 0x29, 0xd3, 0x0e, 0x92, 0xb6,
	0xff, 0x9d, 0x96, 0xd4, 0xcf, 0xba, 0x28, 0x26, 0xad, 0x74, 0xf9, 0x19, 0x00, 0x00, 0xff, 0xff,
	0xd9, 0x78, 0xb0, 0x26, 0x2a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReplicaServiceClient is the client API for ReplicaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReplicaServiceClient interface {
	RepositoryReplicas(ctx context.Context, in *RepositoryReplicasRequest, opts ...grpc.CallOption) (*RepositoryReplicasResponse, error)
}

type replicaServiceClient struct {
	cc *grpc.ClientConn
}

func NewReplicaServiceClient(cc *grpc.ClientConn) ReplicaServiceClient {
	return &replicaServiceClient{cc}
}

func (c *replicaServiceClient) RepositoryReplicas(ctx context.Context, in *RepositoryReplicasRequest, opts ...grpc.CallOption) (*RepositoryReplicasResponse, error) {
	out := new(RepositoryReplicasResponse)
	err := c.cc.Invoke(ctx, "/gitaly.ReplicaService/RepositoryReplicas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReplicaServiceServer is the server API for ReplicaService service.
type ReplicaServiceServer interface {
	RepositoryReplicas(context.Context, *RepositoryReplicasRequest) (*RepositoryReplicasResponse, error)
}

// UnimplementedReplicaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReplicaServiceServer struct {
}

func (*UnimplementedReplicaServiceServer) RepositoryReplicas(ctx context.Context, req *RepositoryReplicasRequest) (*RepositoryReplicasResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RepositoryReplicas not implemented")
}

func RegisterReplicaServiceServer(s *grpc.Server, srv ReplicaServiceServer) {
	s.RegisterService(&_ReplicaService_serviceDesc, srv)
}

func _ReplicaService_RepositoryReplicas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepositoryReplicasRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicaServiceServer).RepositoryReplicas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.ReplicaService/RepositoryReplicas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicaServiceServer).RepositoryReplicas(ctx, req.(*RepositoryReplicasRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReplicaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gitaly.ReplicaService",
	HandlerType: (*ReplicaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RepositoryReplicas",
			Handler:    _ReplicaService_RepositoryReplicas_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "praefect.proto",
}
