// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stream.proto

package testdata

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	gitalypb "gitlab.com/gitlab-org/gitaly-proto/go/gitalypb"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Destination          *gitalypb.Repository `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetDestination() *gitalypb.Repository {
	if m != nil {
		return m.Destination
	}
	return nil
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Request)(nil), "testdata.Request")
	proto.RegisterType((*Response)(nil), "testdata.Response")
}

func init() { proto.RegisterFile("stream.proto", fileDescriptor_bb17ef3f514bfe54) }

var fileDescriptor_bb17ef3f514bfe54 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xb1, 0x4a, 0x03, 0x41,
	0x10, 0x86, 0xd9, 0x80, 0xf1, 0xdc, 0xa4, 0x71, 0x1b, 0xc3, 0x55, 0x72, 0xd5, 0x35, 0xee, 0xc5,
	0x68, 0x25, 0x82, 0xa8, 0xa5, 0xa4, 0xb9, 0x58, 0xd9, 0x6d, 0xf6, 0x86, 0x73, 0xe1, 0xb2, 0x73,
	0xce, 0x4c, 0x84, 0x3c, 0x49, 0x9e, 0xc1, 0x57, 0x4c, 0x25, 0x66, 0x0d, 0x04, 0x2b, 0xbb, 0x9f,
	0x9f, 0xe1, 0x9b, 0x6f, 0x46, 0x8f, 0x59, 0x08, 0xdc, 0xca, 0xf6, 0x84, 0x82, 0x26, 0x13, 0x60,
	0x69, 0x9c, 0xb8, 0x7c, 0xcc, 0xef, 0x8e, 0xa0, 0x49, 0x7d, 0xf1, 0xa0, 0x4f, 0x6b, 0xf8, 0x58,
	0x03, 0x8b, 0xb9, 0xd5, 0xa3, 0x06, 0x58, 0x42, 0x74, 0x12, 0x30, 0x4e, 0xd4, 0xa5, 0x2a, 0x47,
	0x33, 0x63, 0xdb, 0x20, 0xae, 0xdb, 0xd8, 0x1a, 0x7a, 0xe4, 0x20, 0x48, 0x9b, 0xfa, 0x78, 0xac,
	0xd0, 0x3a, 0xab, 0x81, 0x7b, 0x8c, 0x0c, 0xb3, 0x2f, 0xa5, 0x47, 0xaf, 0xc0, 0xb2, 0x00, 0xfa,
	0x0c, 0x1e, 0xcc, 0x5c, 0x5f, 0x3c, 0x77, 0x01, 0xa2, 0x2c, 0xf6, 0x2a, 0x3f, 0x88, 0xf9, 0x5a,
	0x9c, 0x20, 0x99, 0x73, 0x7b, 0x10, 0xb2, 0xbf, 0xfb, 0x73, 0x73, 0x5c, 0x25, 0x62, 0x71, 0xb6,
	0xdb, 0x96, 0x27, 0x99, 0xca, 0xd5, 0xf5, 0x54, 0x99, 0x17, 0x3d, 0xf9, 0x8b, 0x7b, 0xf4, 0x1e,
	0x98, 0xff, 0xcf, 0x1b, 0xee, 0xb6, 0xe5, 0x20, 0x1b, 0x4c, 0xd5, 0xd3, 0xfd, 0xdb, 0x5d, 0x1b,
	0xa4, 0x73, 0x4b, 0xeb, 0x71, 0x55, 0xa5, 0x78, 0x85, 0xd4, 0x56, 0xe9, 0xde, 0x2a, 0x44, 0x01,
	0x8a, 0xae, 0x4b, 0xc1, 0x43, 0x2f, 0x48, 0xd5, 0x01, 0xb8, 0x1c, 0xee, 0xbf, 0x77, 0xf3, 0x1d,
	0x00, 0x00, 0xff, 0xff, 0x85, 0x68, 0x0f, 0x8f, 0x65, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestServiceClient is the client API for TestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServiceClient interface {
	ClientStreamRepoMutator(ctx context.Context, in *Request, opts ...grpc.CallOption) (TestService_ClientStreamRepoMutatorClient, error)
	ClientStreamRepoAccessor(ctx context.Context, in *Request, opts ...grpc.CallOption) (TestService_ClientStreamRepoAccessorClient, error)
}

type testServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestServiceClient(cc *grpc.ClientConn) TestServiceClient {
	return &testServiceClient{cc}
}

func (c *testServiceClient) ClientStreamRepoMutator(ctx context.Context, in *Request, opts ...grpc.CallOption) (TestService_ClientStreamRepoMutatorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TestService_serviceDesc.Streams[0], "/testdata.TestService/ClientStreamRepoMutator", opts...)
	if err != nil {
		return nil, err
	}
	x := &testServiceClientStreamRepoMutatorClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TestService_ClientStreamRepoMutatorClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type testServiceClientStreamRepoMutatorClient struct {
	grpc.ClientStream
}

func (x *testServiceClientStreamRepoMutatorClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *testServiceClient) ClientStreamRepoAccessor(ctx context.Context, in *Request, opts ...grpc.CallOption) (TestService_ClientStreamRepoAccessorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TestService_serviceDesc.Streams[1], "/testdata.TestService/ClientStreamRepoAccessor", opts...)
	if err != nil {
		return nil, err
	}
	x := &testServiceClientStreamRepoAccessorClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TestService_ClientStreamRepoAccessorClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type testServiceClientStreamRepoAccessorClient struct {
	grpc.ClientStream
}

func (x *testServiceClientStreamRepoAccessorClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TestServiceServer is the server API for TestService service.
type TestServiceServer interface {
	ClientStreamRepoMutator(*Request, TestService_ClientStreamRepoMutatorServer) error
	ClientStreamRepoAccessor(*Request, TestService_ClientStreamRepoAccessorServer) error
}

func RegisterTestServiceServer(s *grpc.Server, srv TestServiceServer) {
	s.RegisterService(&_TestService_serviceDesc, srv)
}

func _TestService_ClientStreamRepoMutator_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TestServiceServer).ClientStreamRepoMutator(m, &testServiceClientStreamRepoMutatorServer{stream})
}

type TestService_ClientStreamRepoMutatorServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type testServiceClientStreamRepoMutatorServer struct {
	grpc.ServerStream
}

func (x *testServiceClientStreamRepoMutatorServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

func _TestService_ClientStreamRepoAccessor_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TestServiceServer).ClientStreamRepoAccessor(m, &testServiceClientStreamRepoAccessorServer{stream})
}

type TestService_ClientStreamRepoAccessorServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type testServiceClientStreamRepoAccessorServer struct {
	grpc.ServerStream
}

func (x *testServiceClientStreamRepoAccessorServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

var _TestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "testdata.TestService",
	HandlerType: (*TestServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ClientStreamRepoMutator",
			Handler:       _TestService_ClientStreamRepoMutator_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ClientStreamRepoAccessor",
			Handler:       _TestService_ClientStreamRepoAccessor_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "stream.proto",
}
