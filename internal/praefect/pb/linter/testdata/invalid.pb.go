// Code generated by protoc-gen-go. DO NOT EDIT.
// source: invalid.proto

package test

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// InvalidRequest did not set the operation type to a valid option
type InvalidRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvalidRequest) Reset()         { *m = InvalidRequest{} }
func (m *InvalidRequest) String() string { return proto.CompactTextString(m) }
func (*InvalidRequest) ProtoMessage()    {}
func (*InvalidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb882c37c371ca1c, []int{0}
}

func (m *InvalidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvalidRequest.Unmarshal(m, b)
}
func (m *InvalidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvalidRequest.Marshal(b, m, deterministic)
}
func (m *InvalidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvalidRequest.Merge(m, src)
}
func (m *InvalidRequest) XXX_Size() int {
	return xxx_messageInfo_InvalidRequest.Size(m)
}
func (m *InvalidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InvalidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InvalidRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*InvalidRequest)(nil), "test.InvalidRequest")
}

func init() { proto.RegisterFile("invalid.proto", fileDescriptor_bb882c37c371ca1c) }

var fileDescriptor_bb882c37c371ca1c = []byte{
	// 82 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0xcc, 0x2b, 0x4b,
	0xcc, 0xc9, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0x49, 0x2d, 0x2e, 0x91,
	0xe2, 0xc9, 0x2f, 0x28, 0xa9, 0x2c, 0x48, 0x85, 0x88, 0x29, 0x49, 0x70, 0xf1, 0x79, 0x42, 0x14,
	0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x58, 0xb1, 0x7d, 0x9a, 0xae, 0xc1, 0xc4, 0xc1, 0x90,
	0xc4, 0x06, 0x56, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x6c, 0xaf, 0x50, 0x45, 0x00,
	0x00, 0x00,
}
